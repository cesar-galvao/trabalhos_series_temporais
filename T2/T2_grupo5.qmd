---
title: "Trabalho Prático 2"
subtitle: "Análise de Séries Temporais - 1/2023" 
author:
  - Ana Carolina Vianna - 18/0097261
  - César Augusto Galvão - 19/0011572
  - Yan Flávio Vianna - 14/0166149
format: 
  pdf:
    toc: true
    keep-tex: true
    include-in-header:
      text: |
        \usepackage[auth-lg]{authblk}
execute:
  echo: false
  message: false
  warning: false
---

{{< pagebreak >}}

# Introdução: série selecionada, características e decomposição

```{r pacotes}
if(!("pacman" %in% installed.packages())){install.packages("pacman")}

pacman::p_load(Mcomp, tidyverse, forecast, fpp2, xts, tseries, tidymodels)
```

```{r selecao-dados}
# T2 -> 2169 ou 2183

data(M3) #carrega os dados
id <- 2183 #série temporal escolhida

serie <- M3[[id]]

dados <- serie$x
```


A série temporal escolhida foi a de número *id* correspondente a `r id`. De acordo com a definição do próprio pacote, refere-se a *`r serie$description`*. Foram realizadas medidas mensais de 1983 a 1992 e o horizonte de previsão requerido é das 18 ocorrências seguintes.  

O gráfico da série, com *in* e *out-sample*, é exposto a seguir.

```{r plot-serie-total}

plot(serie, main = "Série Temporal M3-2183")

```

A série aparenta ter dois períodos, pelo menos: um ciclo anual e outro que compreende um período maior. No entanto, ao se tentar decompor a série com múltiplas sazonalidades, obté-se o seguinte:

* **Adicionando uma componente sazonal com ciclo menor que 1 ano** -- uma das componentes sazonais apresenta heteroscedasticidade;
* **Adicionando uma componente sazonal com ciclo maior que 1 ano** -- resíduos apresentam periodicidade ou heteroscedasticidade.

Optou-se portanto pela decomposição STL apenas com a sazonalidade anual, mas fica evidente que esta decomposição não é adequada quando se avalia a componente de tendência. A decomposição é exposta a seguir.  


```{r decomposicao-mstl}

serie_ms <- forecast::msts(dados, seasonal.periods = c(12))

# media dos resíduos é em torno de 5. Considerando a magnitude dos dados que temos usando summary(dados), está próximo de zero o suficiente

#tentei períodos secundários, porém o melhor ajuste é com apenas um ciclo anual. Só é possível dois ciclos secundários completos para análise até quadrienal, mas até aí todos apresentam resíduos inadequados. 

decomp_mstl <- mstl(serie_ms, lambda = NULL, t.window = 9)

#ajustar com lambda = "auto" até agora não parece fazer qualquer diferença

decomp_mstl %>% autoplot(main = "Decomposição MSTL com período anual simples")

```

COMENTAR
- para que serve diff normal e sazonal
- o que conseguimos depois de aplicar
- teste de estacionariedade
- deixar pronto para a modelagem

```{r diff-acf-pacf}
ndiffs(serie_ms)
serie_ms %>% diff() %>% nsdiffs()

serie_ms <- serie_ms %>% diff() %>% diff(lag = 12)
```

```{r testes}
#kpss estacionariedade

```


# Modelos ARIMA: seleção, transformações e resíduos

- ACf e PACF
- Construção do modelo
- Resíduos

# Modelos ETS: seleção, transformações e resíduos

# Estudo de desempenho preditivo

## Resultados da Janela Deslizante

## Performance em relação aos horizontes de previsão

### ARIMA

### ETS

# Resultados

apresente em tabelas e gráficos as previsões dos 4 modelos selecionados e também apresente em uma tabela os resultados de acurácia dos 4 modelos selecionados e dos modelos benchmarks. Comente os resultados de modo objetivo;

# Apêndice

Todo o projeto de composição deste documento pode ser encontrado aqui: https://github.com/cesar-galvao/trabalhos_series

```{r codigo, eval = FALSE, echo = TRUE}

pacman::p_load(Mcomp, tidyverse, forecast, fpp2, xts, tseries, tidymodels)

data(M3) #carrega os dados
id <- 2546 #série temporal escolhida

serie <- M3[[id]]

dados <- serie$x

plot(serie, main = "Série Temporal M3-2546")

serie$x %>% 
  stl(s.window = 7, t.window = 7) %>%
  plot(main = "Decomposição STL (LOESS)")

#sazonalidade diaria e semanal
msts(serie$x, seasonal.periods = c(12, 6))%>%
#janela de ajuste 'Cleveland et al (1990)'
  mstl(., s.window = 7, t.window = 7) %>% plot(main = "Decomposição MSTL")

d <- ndiffs(serie$x)

D <- serie$x %>% diff() %>% nsdiffs()

#aplica 2 diferenciacoes
serie_d <- serie$x %>% diff(differences = 2)

kpss.test(serie_d)

par(mfrow = c(1, 3))
plot(serie_d)
acf(serie_d, lag.max = 12*7)
pacf(serie_d, lag.max = 12*7)

parcim <- character()

melhor_AICc <- Inf
for(p in 0:2){
  for(q in 0:2){
    for(P in 0:1){
      for(Q in 0:1){
        fit <- Arima(serie$x, order = c(p,2,q), seasonal = c(P, 0, Q))
        if(fit$aicc < melhor_AICc){
          melhor_AICc <- fit$aicc
          parcim <- c(paste0("p = ",p,", q = ", q, ", P = ", P, ", Q = ", Q,
                             ", AICc = ", round(fit$aicc,4)),parcim)
        }
      }
    }
  }
}



parcim


fit <- arima(serie$x, order = c(0,2,1), seasonal = c(1,0,0), method = "CSS")

fit$coef %>% tidy()


par(mfrow=c(1,2))
E <- fit$residuals %>% window(start=c(1984,3))
E1 <- fit$residuals
plot(E1)
plot(E, main = "Processo dos resíduos")

par(mfrow=c(1,3))
plot(E)
qqnorm(E)
qqline(E)
acf(E, lag.max=12*5)


bind_rows(
  tseries::kpss.test(E) %>% tidy() %>% select(-parameter),
  Box.test(E, lag = 20, type = "Ljung-Box")%>% tidy() %>% select(-parameter)
  
  auto.arima(serie$x, d = 2, D = 0)

```
