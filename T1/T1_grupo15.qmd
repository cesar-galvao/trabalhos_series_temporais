---
title: "Trabalho Prático 1"
subtitle: "Análise de Séries Temporais - 1/2023" 
author:
  - Ana Theresa Figueiredo - 18/0116088
  - César Augusto Galvão - 19/0011572
format: 
  pdf:
    toc: true
    keep-tex: true
    include-in-header:
      text: |
        \usepackage[auth-lg]{authblk}
execute:
  echo: false
  message: false
  warning: false
---

{{< pagebreak >}}

# Introdução

```{r pacotes}
pacman::p_load(Mcomp, tidyverse, forecast, fpp2, xts, tseries, tidymodels)
```

```{r selecao-dados}
data(M3) #carrega os dados
id <- 2546 #série temporal escolhida

serie <- M3[[id]]

dados <- serie$x
```

A série temporal escolhida foi a de número *id* correspondente a `r id`. De acordo com a definição do próprio pacote, refere-se a *`r serie$description`*, ou seja, dados financeiros e de impréstimos industriais e comerciais. Foram realizadas medidas mensais de 1983 a 1992 e o horizonte de previsão requerido é das 18 ocorrências seguintes.

O gráfico da série, com *in* e *out-sample*, é exposto a seguir.

```{r plot-serie-total}

plot(serie, main = "Série Temporal M3-2546")

```

# a. Decomposição da série temporal.

Inicia-se a decomposição utilizando STL, caso em que se utiliza uma decomposição Loess. O gráfico dos resultados da função `stl()` são expostos a seguir utilizando os argumentos `s.window` e `t.window` iguais a sete. Esta configuração de argumentos foi escolhida após algumas iterações -- balizada também por recomendações de Cleveland *et al.* (1990) -- buscando, entre outros fatores, um comportamento adequado dos resíduos do modelo.

```{r STL}
#| fig-width: 6
#| fig-height: 4
serie$x %>% 
  stl(s.window = 7, t.window = 7) %>%
  plot(main = "Decomposição STL (LOESS)")
```

De fato, observa-se uma tendência crescente até 1990, além de parecer haver também uma sazonalidade anual. Esta apresenta alguns picos mais intensos no começo dos ciclos periódicos e menos intensos na segunda metade da série.

Além disso, o termo aleatório parece estável a menos de um pico em 1987, característica que orientou a escolha dos valores para `t.window` e `s.window`. Esses argumentos (...)

**DESCREVER O QUE T.WINDOW E S.WINDOW FAZEM**

Experimenta-se também a decomposição via MSTL, procurando uma sazonalidade múltipla, sugerida pelos picos nos inícios das ondas sazonais. Após algumas iterações, optou-se pelo período bimestral, complementarmente ao período mensal original da série. Os mesmos valores para os argumentos de janela foram utilizados.

```{r}
#| fig-width: 7
#| fig-height: 4.5

#sazonalidade diaria e semanal
msts(serie$x, seasonal.periods = c(12, 6))%>%
#janela de ajuste 'Cleveland et al (1990)'
  mstl(., s.window = 7, t.window = 7) %>% plot(main = "Decomposição MSTL")
```

De fato, conseguiu-se remover o pico inicial da sazonalidade simples. No entanto, nota-se uma variação grande nas amplitudes sazonais, assim como homocedasticidade do resíduo.

Opta-se finalmente pela decomposição STL, com sazonalidade simples.

# b. Escolha um modelo ARIMA

-   O modelo selecionado deve ser baseado no que você visualizou na decomposição, testes estatísticos, gráficos ACF, gráficos PACF, critérios de parcimonia e resíduos;
-   Detalhe todo o procedimento da escolha do modelo;
-   Nao pode usar AutoArima
-   Tem q fazer o algorito mostrado em sala.

Para selecionar o modelo ARIMA, iniciamos pela identificação das diferenciações sazonais e não sazonais utilizando as funções `nsdiffs()` e `ndiffs()`, respectivamente, do pacote `forecast`. Dessa forma, para um modelo $\text{SARIMA}(p,d,q)\times(P,D,Q)_{12}$ ou $\text{SARMA}(P,Q)_{12}$, obtemos os valores de $D$ e $d$.

```{r n-diffs}
d <- ndiffs(serie$x)

D <- serie$x %>% diff() %>% nsdiffs()

#aplica 2 diferenciacoes
serie_d <- serie$x %>% diff(differences = 2)
```

Isto feito, sabemos que o modelo é pelo menos $(p,2,q)\times(P,0,Q)_{12}$.

## Estacionariedade da série

Antes de prosseguir, avalia-se a estacionariedade da série. Para isso, utiliza-se o teste KPSS (Kwiatkowski *et al.*, 1992. As hipóteses do teste são:

$$
\begin{aligned}
  &H_0: \text{o processo é estacionário} \\
  &H_1: \text{o processo possui raiz unitária}
\end{aligned}
$$
Os resultados do teste são exibidos na tabela a seguir, sugerindo não rejeitar a hipótese de estacionariedade.

```{r estacionariedade-serie}
kpss.test(serie_d) %>% 
  tidy() %>%
  select(-parameter) %>%
  knitr::kable(
    format = "latex",
    align = "c",
    booktabs = TRUE,
    longtable = TRUE,
    linesep = "",
    col.names = c("Estatística de teste", "p-valor", "Método"),
    ) %>%
  kableExtra::kable_styling(
      position = "center",
      latex_options = c("striped", "repeat_header"),
      stripe_color = "gray!15")
```



# Análise gráfica FAC e FACP

A seguir são expostos três gráficos para a série diferenciada em $\nabla^2x_t$: a série original com duas diferenciações simples (portanto estacionária), sua Função de Autocorrelação - FAC (*ACF*) e a Função de Autocorrelação Parcial - FACP (*Partial ACF*).

```{r FAC-FACP}
#| fig-width: 7.5
#| fig-height: 3.5
par(mfrow = c(1, 3))
plot(serie_d)
acf(serie_d, lag.max = 12*7)
pacf(serie_d, lag.max = 12*7)
```

Nota-se um decaimento amortecido no gráfico FAC e poucas correlações fora da banda apenas até Lag 1 do FACP. As autocorrelações parciais, no entanto, também decaem de forma amortecida para zero sem quebras. Este comportamento indica candidatos a modelos ARIMA ou SARMA.

## Análise iterativa

Na falta de comportamentos claros indicando os demais coeficientes, recorre-se a uma varredura para selecionar o modelo mais parcimonioso utilizando AICc como critério.

Conforme a saída a seguir, verifica-se uma boa configuração sendo $\text{SARMA}(0,2,1)\times(1,0,0)$

```{r iteracoes-ARIMA}
parcim <- character()

melhor_AICc <- Inf
for(p in 0:2){
  for(q in 0:2){
    for(P in 0:1){
      for(Q in 0:1){
        fit <- Arima(serie$x, order = c(p,2,q), seasonal = c(P, 0, Q))
        if(fit$aicc < melhor_AICc){
          melhor_AICc <- fit$aicc
          parcim <- c(paste0("p = ",p,", q = ", q, ", P = ", P, ", Q = ", Q,
                             ", AICc = ", round(fit$aicc,4)),parcim)
        }
      }
    }
  }
}



parcim
```

Finalmente, ajusta-se o modelo conforme as especificações e obtém-se os seguintes coeficientes:

```{r}

fit <- arima(serie$x, order = c(0,2,1), seasonal = c(1,0,0), method = "CSS")

fit$coef %>% tidy() %>%
  knitr::kable(
    format = "latex",
    align = "c",
    booktabs = TRUE,
    longtable = TRUE,
    linesep = "",
    digits = 4,
    col.names = c("Coeficiente", "Valor"),
    ) %>%
  kableExtra::kable_styling(
      position = "center",
      latex_options = c("striped", "repeat_header"),
      stripe_color = "gray!15")
  

```



# c. Análise de resíduos do modelo selecionado.

Para avaliar a qualidade do modelo, verifica-se as seguintes suposições sobre $\{\varepsilon_t\}$:

- Média zero,
- Variância constante,
- Autocorrelação nula,
- Normalidade.

Verifica-se inicialmente a série dos resíduos sem a incialização com zeros. Graficamente, pode-se dizer que tem média igual a zero. De fato, a média calculada dos resíduos corresponde a `r mean(fit$residuals) %>% round(3)`, o que é muito próximo de zero considerando a ordem de grandeza de muitos valores dos resíduos. Além disso, a variância parece ser constante, a menos do pico no meio da série.

```{r dist-residuos}
#| fig-width: 7.5
#| fig-height: 3.5

par(mfrow=c(1,2))
E <- fit$residuals %>% window(start=c(1984,3))
E1 <- fit$residuals
plot(E1)
plot(E, main = "Processo dos resíduos")
```
O Q-Q Plot a seguir aponta uma proximidade não ideal em relação à distribuição normal com uma caudal mais pesada à esquerda e um ponto extremo à direita. Além disso, o ACF possui uma quebra na banda de confiança, mas mantém as demais autocorrelações dentro dos limites.

```{r}
#| fig-width: 7.5
#| fig-height: 3.5
par(mfrow=c(1,3))
plot(E)
qqnorm(E)
qqline(E)
acf(E, lag.max=12*5)

```
Por fim, verifica-se utilizando testes de hipótese estacionariedade ($H_0:$ o processo é estacionário), independência ($H_0: \rho(1) = \rho(2), = \dots = \rho(m) = 0$) e normalidade ($H_0:$ não se rejeita normalidade) dos resíduos do modelo.

Infere-se pelos testes que se trata de uma série estacionária, com autocorrelações todas iguais a zero, porém não normal. Isso provavelmente ocorre por causa de um peso maior na cauda esquerda e por causa da presença de alguns valores extremos.

```{r}
bind_rows(
  tseries::kpss.test(E) %>% tidy() %>% select(-parameter),
  Box.test(E, lag = 20, type = "Ljung-Box")%>% tidy() %>% select(-parameter),
  shapiro.test(E)%>% tidy()) %>%
  knitr::kable(
    format = "latex",
    align = "c",
    booktabs = TRUE,
    longtable = TRUE,
    linesep = "",
    digits = 4,
    col.names = c("Estatística de teste", "p-valor", "Método"),
    ) %>%
  kableExtra::kable_styling(
      position = "center",
      latex_options = c("striped", "repeat_header"),
      stripe_color = "gray!15")
```


# d. Apresentação do modelo selecionado

O modelo selecionado é, conforme ja apresentado, $\text{SARMA}(0,2,1)\times(1,0,0)_{12}$. Em forma polinomial temos:

$$
\begin{aligned}
  \Phi_P(B^s)x_t =& \, \Theta(B)\varepsilon_t \\
  \Phi_1(B)x_t =& \, \Theta_1(B)\varepsilon_t\\
  (1-\phi_1 B)x_t =& \, (1+\theta_1 B)\varepsilon_t \\
  x_t - \phi_1 x_{t-1} =& \, \varepsilon_t  + \theta_1 \varepsilon_{t-1} \\
  x_t  =& \, \varepsilon_t  + \theta_1 \varepsilon_{t-1} + \phi_1 x_{t-1}\\
  x_t  =& \, \varepsilon_t  -0.839 \, \varepsilon_{t-1} + 0.255 \, x_{t-1}
\end{aligned}
$$

# Comparação auto.arima()

Por fim, compara-se o modelo com a saída do modelo sugerido pela função automatizada. De fato, são proximos e o modelo é o mesmo que o selecionado manualmente.

```{r}
auto.arima(serie$x, d = 2, D = 0)

```





# Apêndice

Todo o projeto de composição deste documento pode ser encontrado aqui: https://github.com/cesar-galvao/trabalhos_series

```{r codigo, eval = FALSE, echo = TRUE}

pacman::p_load(Mcomp, tidyverse, forecast, fpp2, xts, tseries, tidymodels)

data(M3) #carrega os dados
id <- 2546 #série temporal escolhida

serie <- M3[[id]]

dados <- serie$x

plot(serie, main = "Série Temporal M3-2546")

serie$x %>% 
  stl(s.window = 7, t.window = 7) %>%
  plot(main = "Decomposição STL (LOESS)")

#sazonalidade diaria e semanal
msts(serie$x, seasonal.periods = c(12, 6))%>%
#janela de ajuste 'Cleveland et al (1990)'
  mstl(., s.window = 7, t.window = 7) %>% plot(main = "Decomposição MSTL")

d <- ndiffs(serie$x)

D <- serie$x %>% diff() %>% nsdiffs()

#aplica 2 diferenciacoes
serie_d <- serie$x %>% diff(differences = 2)

kpss.test(serie_d)

par(mfrow = c(1, 3))
plot(serie_d)
acf(serie_d, lag.max = 12*7)
pacf(serie_d, lag.max = 12*7)

parcim <- character()

melhor_AICc <- Inf
for(p in 0:2){
  for(q in 0:2){
    for(P in 0:1){
      for(Q in 0:1){
        fit <- Arima(serie$x, order = c(p,2,q), seasonal = c(P, 0, Q))
        if(fit$aicc < melhor_AICc){
          melhor_AICc <- fit$aicc
          parcim <- c(paste0("p = ",p,", q = ", q, ", P = ", P, ", Q = ", Q,
                             ", AICc = ", round(fit$aicc,4)),parcim)
        }
      }
    }
  }
}



parcim


fit <- arima(serie$x, order = c(0,2,1), seasonal = c(1,0,0), method = "CSS")

fit$coef %>% tidy()


par(mfrow=c(1,2))
E <- fit$residuals %>% window(start=c(1984,3))
E1 <- fit$residuals
plot(E1)
plot(E, main = "Processo dos resíduos")

par(mfrow=c(1,3))
plot(E)
qqnorm(E)
qqline(E)
acf(E, lag.max=12*5)


bind_rows(
  tseries::kpss.test(E) %>% tidy() %>% select(-parameter),
  Box.test(E, lag = 20, type = "Ljung-Box")%>% tidy() %>% select(-parameter)
  
  auto.arima(serie$x, d = 2, D = 0)

```
